[{"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js":"1","/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js":"2","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/store/ReduxStore.js":"3","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/reducers/Auth.js":"4","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/actions/authActions.js":"5","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoInterface.js":"6","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoStyles.js":"7","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Header/Header.js":"8","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Todo/Todo.js":"9","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoDetails/TodoDetails.js":"10","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Login.js":"11","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Logout.js":"12","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/mutations/login.js":"13","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/LoadingSpinner/LoadingSpinner.js":"14","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Signup.js":"15","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/mutations/signup.js":"16","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetActiveUser.js":"17","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/getActiveUser.js":"18"},{"size":1025,"mtime":1612922106129,"results":"19","hashOfConfig":"20"},{"size":2613,"mtime":1613245058348,"results":"21","hashOfConfig":"20"},{"size":1198,"mtime":1613245393443,"results":"22","hashOfConfig":"20"},{"size":1086,"mtime":1613202331305,"results":"23","hashOfConfig":"20"},{"size":1055,"mtime":1613201003245,"results":"24","hashOfConfig":"20"},{"size":5808,"mtime":1613203136280,"results":"25","hashOfConfig":"20"},{"size":3655,"mtime":1613245509019,"results":"26","hashOfConfig":"20"},{"size":1706,"mtime":1613202706691,"results":"27","hashOfConfig":"20"},{"size":1524,"mtime":1613245565191,"results":"28","hashOfConfig":"20"},{"size":1849,"mtime":1613203154172,"results":"29","hashOfConfig":"20"},{"size":4255,"mtime":1613194238663,"results":"30","hashOfConfig":"20"},{"size":559,"mtime":1613202790031,"results":"31","hashOfConfig":"20"},{"size":337,"mtime":1613014032347,"results":"32","hashOfConfig":"20"},{"size":1214,"mtime":1613027622339,"results":"33","hashOfConfig":"20"},{"size":9954,"mtime":1613203128558,"results":"34","hashOfConfig":"20"},{"size":368,"mtime":1613174127376,"results":"35","hashOfConfig":"20"},{"size":238,"mtime":1613198403715,"results":"36","hashOfConfig":"20"},{"size":299,"mtime":1613199828848,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"axbrrb",{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js",["80","81","82"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Apollo / GQL\nimport ApolloClient from \"apollo-boost\";\nimport {\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n  from,\n} from \"@apollo/react-hooks\";\nimport { onError } from \"@apollo/client/link/error\";\n\n//redux\nimport ReduxStore from \"./redux/store/ReduxStore\";\nimport { Provider } from \"react-redux\";\n\n// main styles\nimport './index.css';\n\n// main Component\nimport App from \"./App\";\n\n\n\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n});\nconst store = ReduxStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n",["83","84"],"/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js",["85","86"],"/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/store/ReduxStore.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/reducers/Auth.js",["87"],"import {\n  SET_USER,\n  LOGIN_USER,\n  LOGOUT_USER,\n  REFRESH_SESSION,\n} from \"../actions/authActions\";\n\nexport const auth = (state = { error: false, activeUser: {} }, action) => {\n  let nextState = {...state, error: false}\n  switch (action.type) {\n    case LOGIN_USER:\n      let { error, token, user } = action.data.Login;\n      if (action.data.Login.error) {\n        return { ...nextState, error };\n      }\n      return { ...nextState, activeUser: user, token: token };\n    case LOGOUT_USER:\n      // remove all localStorage set for jwt authentication\n      nextState = { error: false, activeUser: {} };\n      return nextState;\n    case REFRESH_SESSION:\n      nextState = {\n        error: action.data.GetActiveUser.error,\n        token: action.data.GetActiveUser.token,\n        activeUser: {\n          id: action.data.GetActiveUser.user.id,\n          name: action.data.GetActiveUser.user.name,\n          email: action.data.GetActiveUser.user.email,\n          items: action.data.GetActiveUser.user.items,\n        }\n      }\n      return nextState;\n    default:\n      return state;\n  }\n};\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/actions/authActions.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoInterface.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoStyles.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Header/Header.js",["88","89"],"import React, { useState, useEffect } from \"react\";\n//redux\nimport { useSelector } from \"react-redux\"\n\n// core components\nimport Login from '../../Auth/Login'\nimport Logout from '../../Auth/Logout'\n//mui components\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n//mui icons\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\n\n\nconst Header = ({ classes, setDataLoading, setModalOpen, setActive }) => {\n  const auth = useSelector((state) => state.auth);\n\n  return (\n    <div>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.header}>\n          <div style={{ display: \"flex\" }}>\n            <Typography className={classes.appName} noWrap>\n              Todo List App\n            </Typography>\n            <NoteAddIcon className={classes.icon} />\n            <Divider\n              flexItem={true}\n              orientation=\"vertical\"\n              variant=\"middle\"\n              className={classes.divider}\n            />\n            <DeleteIcon className={classes.icon} />\n          </div>\n          <div className={classes.signinForm}>\n            {Object.keys(auth.activeUser).length === 0 ? (\n              <Login\n                classes={classes}\n                setDataLoading={setDataLoading}\n                setModalOpen={setModalOpen}\n              />\n            ) : (\n              <Logout classes={classes} setActive={setActive} />\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Todo/Todo.js",["90"],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoDetails/TodoDetails.js",["91","92"],"import React, { useState, useEffect } from \"react\";\n\n// mui core\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst TodoDetails = ({ data, active, classes }) => {\n  // console.log(\"inside the details component\",data, active);\n  const [complete, setComplete] = useState(false);\n  const [activeTodo, setActiveTodo] = useState({ title: \"title\" });\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [current] = useState(data.filter((item) => item.id === active));\n  // console.log(current);;\n\n  useEffect(() => {\n    setComplete(current.status);\n    setActiveTodo(current);\n    setTitle(current.title);\n  }, [current]);\n\n  const handleOnChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSave = (e) => {\n    console.log(\"saved\");\n  };\n  // if (!Object.keys(data.length)) {\n  //   return <div></div>;\n  // }\n  return (\n    <div>\n      <header>\n        {complete ? (\n          <div style={{ color: \"lightgreen\", filter: \"saturate(4)\" }}>\n            Complete\n          </div>\n        ) : (\n          <div style={{ color: \"darkred\", filter: \"saturate(10)\" }}>\n            Incomplete\n          </div>\n        )}\n        <Typography gutterBottom variant=\"h6\">\n          {/* <input placeholder={activeTodo.title}></input> */}\n          <InputBase\n            className={classes.inputs}\n            onBlur={handleSave()}\n            onChange={(e) => handleOnChange(e)}\n            value={title}\n            inputProps={{ \"aria-label\": \"naked\" }}\n          />\n        </Typography>\n      </header>\n      <Divider style={{ backgroundColor: \"grey\", marginBottom: \"20px\" }} />\n      <Typography paragraph>{activeTodo.content}</Typography>\n    </div>\n  );\n};;\n\nexport default TodoDetails;\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Login.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Logout.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/mutations/login.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/LoadingSpinner/LoadingSpinner.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Signup.js",["93","94"],"import React, { useEffect, useState } from \"react\";\n// redux\nimport { useDispatch } from \"react-redux\";\nimport { signupHandler } from \"../../redux/actions/authActions\";\n// apollo\nimport { useMutation } from \"@apollo/react-hooks\";\n// import { GET_USER } from \"../../graphql/queries/GetUser\";\nimport { GET_USER_BY_SIGNUP } from \"../../graphql/mutations/signup\";\n// animxyz animation\nimport \"@animxyz/core\";\n// mui components\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n// mui icons\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport HttpsOutlinedIcon from \"@material-ui/icons/HttpsOutlined\";\nimport VisibilityOffOutlinedIcon from \"@material-ui/icons/VisibilityOffOutlined\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\n// concat classes\nimport clsx from \"clsx\";\n\n\n\nconst Signup = ({ classes, setModalOpen }) => {\n  const dispatch = useDispatch();\n  const [passVisibility, setPassVisibility] = useState(false);\n  const [confirmPassVisibility, setConfirmPassVisibility] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\n  const [creatingUserLoader, setCreatingUserLoader] = useState(false);\n  const [overThirty, setOverThirty] = useState(false);\n  const [serverError, setServerError] = useState(\"\");\n\n  let [getUserBySignup, { data, loading, error }] = useMutation(\n    GET_USER_BY_SIGNUP\n  );\n\n  let timeoutName;\n  let timeoutConfirmPassword;\n\n  useEffect(() => {\n    setServerError(\"\");\n    if (!error && data && !loading) {\n      if (data.Signup.error) {\n        setServerError(data.Signup.error);\n        return\n      }\n      dispatch(signupHandler(data))\n      setModalOpen(false)\n    }\n  }, [dispatch, error, data, loading]);\n  // Loading bar\n  useEffect(() => {\n    if (loading) {\n      setCreatingUserLoader(true);\n    }\n    setTimeout(() => setCreatingUserLoader(false), 2800);\n    return () => clearTimeout(timeoutName);\n  }, [loading, creatingUserLoader, timeoutName]);\n\n  // over 30 error\n  useEffect(() => {\n    setOverThirty(false);\n    if (name.length > 30) {\n      setOverThirty(true);\n    }\n  }, [name, overThirty]);\n\n  // password and confirm requirements\n  useEffect(() => {\n    if (password.length >= 8) {\n      setPasswordError(false);\n    }\n    setConfirmPasswordError(false);\n    if (password !== confirmPassword && confirmPassword) {\n      timeoutConfirmPassword = setTimeout(\n        () => setConfirmPasswordError(true),\n        1000\n      );\n    }\n    return () => clearTimeout(timeoutConfirmPassword);\n  }, [password, confirmPassword, setPasswordError]);\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    setNameError(false);\n    setPasswordError(false);\n    setConfirmPasswordError(false);\n    let nameCurrErr = false;\n    let passCurrErr = false;\n    let confirmPassCurrErr = false;\n\n    if (password.length < 8) {\n      passCurrErr = true;\n      setPasswordError(true);\n    }\n    if (confirmPasswordError) {\n      confirmPassCurrErr = true;\n    }\n\n    const regex = /^[a-z ]{3,30}$/i;\n    if (!regex.test(name)) {\n      nameCurrErr = true;\n      // timeoutName = setTimeout(() => setNameError(true), 100);\n      setNameError(true);\n    }\n\n    if (!nameCurrErr && !passCurrErr && !confirmPassCurrErr) {\n      setCreatingUserLoader(true);\n      getUserBySignup({\n        variables: {\n          name: name,\n          email: email,\n          password: password,\n        },\n      });\n    }\n\n    setCreatingUserLoader(false);\n  };\n\n  const nameHelperText = () => {\n    const handleOverThirty = clsx({\n      [classes.nameLength]: !overThirty,\n      [classes.nameLengthError]: overThirty,\n    });\n    if (nameError) {\n      return (\n        <>\n          <span className={handleOverThirty}>{name.length} of 30</span>\n          <span>\n            must be between 3 and 30 characters and must not contain special\n            characters `!@#$%&*` or numbers.\n          </span>\n        </>\n      );\n    } else {\n      return <span className={handleOverThirty}>{name.length} of 30</span>;\n    }\n  };\n  return (\n    <>\n      {true && (\n        <div className={classes.modalContainer}>\n          <div className=\"xyz-in\" xyz=\"inherit down\">\n            <div className={classes.modalContent}>\n              <header className={classes.signupHeader}>\n                <h2>Create an Account</h2>\n              </header>\n              <span style={{ padding: \"0 20px\", color: \"black\" }}>\n                * indicates required fields\n              </span>\n              {serverError ? (\n                <div \n                className={classes.serverErrorStyles}\n                >\n                  <span className={classes.serverErrorStyles}>{serverError}</span>\n                </div>\n              ) : null}\n              <form onSubmit={handleSignup} className={classes.signupForm}>\n                <TextField\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                  error={nameError}\n                  helperText={nameHelperText()}\n                  label=\"Name\"\n                  type=\"name\"\n                  autoComplete=\"name\"\n                  variant=\"outlined\"\n                  className={classes.signupInput}\n                  InputProps={{\n                    className: classes.signupInputChildren,\n                    endAdornment: <PersonOutlineIcon />,\n                  }}\n                  autoFocus={true}\n                />\n                <TextField\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                  label=\"Email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  variant=\"outlined\"\n                  className={classes.signupInput}\n                  InputProps={{\n                    className: classes.signupInputChildren,\n                    endAdornment: <HttpsOutlinedIcon />,\n                  }}\n                />\n                <TextField\n                  type=\"username\"\n                  style={{ display: \"none\" }}\n                  autoComplete=\"username\"\n                />\n                <TextField\n                  required\n                  onChange={(e) => setPassword(e.target.value)}\n                  error={passwordError}\n                  helperText={\n                    passwordError &&\n                    \"password must be at least 8 characters long \"\n                  }\n                  color=\"secondary\"\n                  label=\"Password\"\n                  name=\"password\"\n                  type={!passVisibility ? \"password\" : \"reveal\"}\n                  variant=\"outlined\"\n                  autoComplete=\"currentPassword\"\n                  className={classes.signupInput}\n                  InputProps={{\n                    className: classes.signupInputChildren,\n                    endAdornment: passVisibility ? (\n                      <VisibilityOutlinedIcon\n                        onClick={() => setPassVisibility(false)}\n                        className={classes.visibilityIcon}\n                        style={{ color: \"white\" }}\n                      />\n                    ) : (\n                      <VisibilityOffOutlinedIcon\n                        onClick={() => setPassVisibility(true)}\n                        className={classes.visibilityIcon}\n                      />\n                    ),\n                  }}\n                />\n                <TextField\n                  required\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  error={confirmPasswordError}\n                  helperText={\n                    confirmPasswordError &&\n                    \"confirmation does not match password field.\"\n                  }\n                  label=\"Confirm Password\"\n                  type={!confirmPassVisibility ? \"password\" : \"reveal\"}\n                  variant=\"outlined\"\n                  autoComplete=\"current-password\"\n                  className={classes.signupInput}\n                  InputProps={{\n                    className: classes.signupInputChildren,\n                    endAdornment: confirmPassVisibility ? (\n                      <VisibilityOutlinedIcon\n                        onClick={() => setConfirmPassVisibility(false)}\n                        style={{ color: \"white\" }}\n                      />\n                    ) : (\n                      <VisibilityOffOutlinedIcon\n                        onClick={() => setConfirmPassVisibility(true)}\n                        className={classes.visibilityIcon}\n                      />\n                    ),\n                  }}\n                />\n                {!creatingUserLoader ? (\n                  <>\n                    <Button style={{ color: \"white\" }} type=\"submit\">\n                      Create Account\n                    </Button>\n\n                    <Button\n                      className={classes.cancelButton}\n                      onClick={() => setModalOpen(false)}\n                    >\n                      Cancel\n                    </Button>\n                  </>\n                ) : (\n                  <>\n                    <LinearProgress style={{ margin: \"20px\" }} />\n                    <Button\n                      className={classes.cancelButton}\n                      onClick={() => setModalOpen(false)}\n                    >\n                      Cancel\n                    </Button>\n                  </>\n                )}\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Signup;\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/mutations/signup.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetActiveUser.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/getActiveUser.js",[],{"ruleId":"95","severity":1,"message":"96","line":9,"column":3,"nodeType":"97","messageId":"98","endLine":9,"endColumn":11},{"ruleId":"95","severity":1,"message":"99","line":10,"column":3,"nodeType":"97","messageId":"98","endLine":10,"endColumn":7},{"ruleId":"95","severity":1,"message":"100","line":12,"column":10,"nodeType":"97","messageId":"98","endLine":12,"endColumn":17},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":68,"column":6,"nodeType":"107","endLine":68,"endColumn":23,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":74,"column":6,"nodeType":"107","endLine":74,"endColumn":28,"suggestions":"110"},{"ruleId":"95","severity":1,"message":"111","line":2,"column":3,"nodeType":"97","messageId":"98","endLine":2,"endColumn":11},{"ruleId":"95","severity":1,"message":"112","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"113","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"114","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"115","line":13,"column":10,"nodeType":"97","messageId":"98","endLine":13,"endColumn":17},{"ruleId":"95","severity":1,"message":"116","line":13,"column":19,"nodeType":"97","messageId":"98","endLine":13,"endColumn":29},{"ruleId":"105","severity":1,"message":"117","line":57,"column":6,"nodeType":"107","endLine":57,"endColumn":38,"suggestions":"118"},{"ruleId":"105","severity":1,"message":"119","line":82,"column":32,"nodeType":"120","endLine":85,"endColumn":8},"no-unused-vars","'HttpLink' is defined but never used.","Identifier","unusedVar","'from' is defined but never used.","'onError' is defined but never used.","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["124"],"'SET_USER' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setModalOpen'. Either include it or remove the dependency array. If 'setModalOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["125"],"Assignments to the 'timeoutConfirmPassword' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [auth.activeUser, getActiveUser]",{"range":"132","text":"133"},"Update the dependencies array to be: [data, loading, error, dispatch]",{"range":"134","text":"135"},"Update the dependencies array to be: [dispatch, error, data, loading, setModalOpen]",{"range":"136","text":"137"},[1644,1661],"[auth.activeUser, getActiveUser]",[1750,1772],"[data, loading, error, dispatch]",[2115,2147],"[dispatch, error, data, loading, setModalOpen]"]