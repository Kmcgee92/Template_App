[{"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js":"1","/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js":"2","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/LandingPage/LandingPage.js":"3","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetUserItems.js":"4","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/store/ReduxStore.js":"5","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/reducers/Auth.js":"6","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/actions/authActions.js":"7"},{"size":899,"mtime":1611885213194,"results":"8","hashOfConfig":"9"},{"size":1735,"mtime":1611884661275,"results":"10","hashOfConfig":"9"},{"size":122,"mtime":1611883786199,"results":"11","hashOfConfig":"9"},{"size":819,"mtime":1611886197032,"results":"12","hashOfConfig":"9"},{"size":1163,"mtime":1611885641440,"results":"13","hashOfConfig":"9"},{"size":477,"mtime":1611885353569,"results":"14","hashOfConfig":"9"},{"size":2410,"mtime":1611885397284,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"axbrrb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js",[],["34","35"],"/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js",["36","37","38","39"],"\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// Apollo GQL\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {GET_USER_ITEMS} from \"./graphql/queries/GetUserItems\"\n\n// redux\nimport { useSelector, useDispatch } from \"react-redux\";\n// core \nimport LandingPage from './Components/LandingPage/LandingPage'\n\n\n\n\nconst App = () => {\n  const { loading, error, data } = useQuery(GET_USER_ITEMS);\n\n  if (error) return <h1>Database isn't connected properly</h1>;\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <div>\n      <div>\n        Header Component: links will alter based off what route you are on\n      </div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <LandingPage />\n          </Route>\n\n          {/* <Route exact path=\"/manageProfiles\">\n            <ProfileManager />\n          </Route>\n\n          <Route exact path=\"/browse\">\n            <Browse />\n          </Route>\n\n          <Route exact path=\"/history\">\n            <History />\n          </Route>\n\n          <Route exact path=\"/watchlist\">\n            <Watchlist />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <Signin />\n          </Route>\n\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n\n          <Route component={NotFound}>\n            <NotFound />\n          </Route> */}\n        </Switch>\n        {/* temp */}\n      </BrowserRouter>\n      <h1>React is being served</h1>\n      <div></div>\n      <div>\n        !!!---(\n        \n        \n        {data.UserItems ? data.UserItems[0].title : \"Database did not connect\"}\n        )---!!!\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/LandingPage/LandingPage.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetUserItems.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/store/ReduxStore.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/reducers/Auth.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/actions/authActions.js",["40","41"],"import Cookies from \"js-cookie\";\n\nexport const SET_USER = \"SET_USER\";\nexport const REMOVE_USER = \"REMOVE_USER\";\nexport const CREATE_USER = \"CREATE_USER\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\n\n//!ACTIONS\nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    user,\n  };\n};\n\nexport const removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\nexport const createUser = (user) => {\n  return {\n    type: CREATE_USER,\n    user,\n  };\n};\n\nconst updateProfile = (profileId) => {\n  return {\n    type: UPDATE_PROFILE,\n    profileId,\n  };\n};\n\n//! THUNKS\n//restore user\nexport const generateSession = () => async (dispatch) => {\n  const access = Cookies.get(\"access_token_cookie\");\n  const res = await fetch(\"/api/users/token/refresh\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  if (res.ok) {\n    const data = await res.json();\n    dispatch(setUser(data));\n  }\n  return res;\n};\n\n//login\nexport const login = (email, password) => {\n  return async (dispatch) => {\n    const res = await fetch(`/api/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // \"XSRF-TOKEN\": Cookies.get(\"XSRF-TOKEN\")\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    if (res.ok) {\n      const data = await res.json();\n      dispatch(setUser(data));\n    }\n    return res;\n  };\n};\n//logout\nexport const logout = () => async (dispatch) => {\n  const res = await fetch(\"/api/users/token/remove\", {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  if (res.ok) {\n    dispatch(removeUser());\n  }\n  return res;\n};\n\nexport const signup = (name, email, password) => async (dispatch) => {\n  const response = await fetch(\"/api/users/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ name, email, password }),\n  });\n  if (response.ok) {\n    const user = await response.json();\n    dispatch(createUser(user));\n  }\n};\n\nexport const updateUserProfile = (userId, profileId) => async (dispatch) => {\n  const res = await fetch(`/api/users/profiles/${userId}/update/${profileId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  if (res.ok) {\n    const { profile } = await res.json();\n    dispatch(updateProfile(profileId));\n  }\n  return res;\n};\n",["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":17,"nodeType":"50","messageId":"51","endLine":2,"endColumn":25},{"ruleId":"48","severity":1,"message":"52","line":2,"column":27,"nodeType":"50","messageId":"51","endLine":2,"endColumn":36},{"ruleId":"48","severity":1,"message":"53","line":10,"column":10,"nodeType":"50","messageId":"51","endLine":10,"endColumn":21},{"ruleId":"48","severity":1,"message":"54","line":10,"column":23,"nodeType":"50","messageId":"51","endLine":10,"endColumn":34},{"ruleId":"48","severity":1,"message":"55","line":39,"column":9,"nodeType":"50","messageId":"51","endLine":39,"endColumn":15},{"ruleId":"48","severity":1,"message":"56","line":109,"column":13,"nodeType":"50","messageId":"51","endLine":109,"endColumn":20},{"ruleId":"44","replacedBy":"57"},{"ruleId":"46","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'access' is assigned a value but never used.","'profile' is assigned a value but never used.",["59"],["60"],"no-global-assign","no-unsafe-negation"]