[{"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js":"1","/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js":"2","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/store/ReduxStore.js":"3","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/reducers/Auth.js":"4","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetUserItems.js":"5","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/actions/authActions.js":"6","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoInterface.js":"7","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoStyles.js":"8","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Header/Header.js":"9","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Todo/Todo.js":"10","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoDetails/TodoDetails.js":"11","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetUser.js":"12","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Login.js":"13","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Logout.js":"14","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/mutations/login.js":"15","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/LoadingSpinner/LoadingSpinner.js":"16","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Signup.js":"17"},{"size":1025,"mtime":1612922106129,"results":"18","hashOfConfig":"19"},{"size":1213,"mtime":1613019392223,"results":"20","hashOfConfig":"19"},{"size":1163,"mtime":1613002851761,"results":"21","hashOfConfig":"19"},{"size":696,"mtime":1613019034767,"results":"22","hashOfConfig":"19"},{"size":839,"mtime":1612910906401,"results":"23","hashOfConfig":"19"},{"size":1912,"mtime":1613019012803,"results":"24","hashOfConfig":"19"},{"size":5419,"mtime":1613031621361,"results":"25","hashOfConfig":"19"},{"size":2462,"mtime":1613031918299,"results":"26","hashOfConfig":"19"},{"size":1569,"mtime":1613019417394,"results":"27","hashOfConfig":"19"},{"size":1503,"mtime":1613017024164,"results":"28","hashOfConfig":"19"},{"size":1675,"mtime":1613013015996,"results":"29","hashOfConfig":"19"},{"size":426,"mtime":1612981615617,"results":"30","hashOfConfig":"19"},{"size":4494,"mtime":1613027604858,"results":"31","hashOfConfig":"19"},{"size":473,"mtime":1613014355955,"results":"32","hashOfConfig":"19"},{"size":337,"mtime":1613014032347,"results":"33","hashOfConfig":"19"},{"size":1214,"mtime":1613027622339,"results":"34","hashOfConfig":"19"},{"size":3017,"mtime":1613031710616,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"axbrrb",{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js",["77","78","79"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Apollo / GQL\nimport ApolloClient from \"apollo-boost\";\nimport {\n  ApolloProvider,\n  InMemoryCache,\n  HttpLink,\n  from,\n} from \"@apollo/react-hooks\";\nimport { onError } from \"@apollo/client/link/error\";\n\n//redux\nimport ReduxStore from \"./redux/store/ReduxStore\";\nimport { Provider } from \"react-redux\";\n\n// main styles\nimport './index.css';\n\n// main Component\nimport App from \"./App\";\n\n\n\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n});\nconst store = ReduxStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n",["80","81"],"/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js",["82","83","84"],"\nimport React, {useState} from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// Apollo GQL\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {GET_USER_ITEMS} from \"./graphql/queries/GetUserItems\"\n\n// redux\n// import { useSelector, useDispatch } from \"react-redux\";\n// core \nimport TodoInterface from \"./Components/TodoInterface/TodoInterface\"\n\n\n\n\nconst App = () => {\n  // const { data, loading, error } = useQuery(GET_ACTIVE_USER);\n  // if (error) return <h1>Database isn't connected properly</h1>;\n  // if (loading) return <h1>Loading...</h1>;\n  // console.log(data);;\n\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <TodoInterface/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};;\n\nexport default App;\n\n\n\n\n/* <Route exact path=\"/manageProfiles\">\n<ProfileManager />\n</Route>\n\n<Route exact path=\"/browse\">\n<Browse />\n</Route>\n\n<Route exact path=\"/history\">\n<History />\n</Route>\n\n<Route exact path=\"/watchlist\">\n<Watchlist />\n</Route>\n\n<Route exact path=\"/login\">\n<Signin />\n</Route>\n\n<Route exact path=\"/signup\">\n<Signup />\n</Route>\n\n<Route component={NotFound}>\n<NotFound />\n</Route> */\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/store/ReduxStore.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/reducers/Auth.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetUserItems.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/redux/actions/authActions.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoInterface.js",["85"],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoStyles.js",["86","87"],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Header/Header.js",["88","89"],"import React, { useState, useEffect } from \"react\";\n//redux\nimport { useSelector } from \"react-redux\"\n\n// core components\nimport Login from '../../Auth/Login'\nimport Logout from '../../Auth/Logout'\n//mui components\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n//mui icons\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\n\n\nconst Header = ({ classes, setDataLoading }) => {\n  const auth = useSelector((state) => state.auth);\n\n  return (\n    <div>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar className={classes.header}>\n          <div style={{ display: \"flex\" }}>\n            <Typography className={classes.appName} noWrap>\n              Todo List App\n            </Typography>\n            <NoteAddIcon className={classes.icon} />\n            <Divider\n              flexItem={true}\n              orientation=\"vertical\"\n              variant=\"middle\"\n              className={classes.divider}\n            />\n            <DeleteIcon className={classes.icon} />\n          </div>\n          <div className={classes.signinForm}>\n            {Object.keys(auth.activeUser).length === 0 ? (\n              <Login classes={classes} setDataLoading={setDataLoading} />\n            ) : (\n              <Logout classes={classes} />\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/Todo/Todo.js",["90"],"import React, { useState, useEffect } from \"react\";\n// redux\nimport { useSelector } from \"react-redux\";\n//mui components\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n// mui icons\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\n\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\nconst Todo = ({ classes, data, active, setActive }) => {\n  const [abvTitle, setAbvTitle] = useState(null);\n  useEffect(() => {\n    if (data.title.length > 9) {\n      setAbvTitle(`${data.title.slice(0, 9)}...`);\n    } else {\n      setAbvTitle(data.title);\n    }\n  }, [data]);\n\n  const handleActive = () => {\n    setActive(data.id);\n  };\n\n  const todoStyles = classNames({\n    [classes.active]: active === data.id,\n    [classes.drawerItem]: true,\n  });\n  return (\n    <div onClick={() => handleActive()}>\n      <ListItem id={data.id} className={todoStyles} button key={abvTitle}>\n        {data.status ? (\n          <>\n            <CheckCircleOutlineIcon\n              style={{ marginRight: \"5px\", color: \"green\" }}\n            />\n            <ListItemText className={classes.crossout} primary={abvTitle} />\n          </>\n        ) : (\n          <>\n            <AssignmentIcon style={{ marginRight: \"5px\" }} />\n            <ListItemText primary={abvTitle} />\n          </>\n        )}\n      </ListItem>\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/TodoDetails/TodoDetails.js",["91","92"],"import React, { useState, useEffect } from \"react\";\n\n// mui core\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nconst TodoDetails = ({ data, active, classes }) => {\n  const [complete, setComplete] = useState(false);\n  const [activeTodo, setActiveTodo] = useState({ title: \"title\" });\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [current] = data.filter((item) => item.id === active);\n\n  useEffect(() => {\n    setComplete(current.status);\n    setActiveTodo(current);\n    setTitle(current.title);\n  }, [current]);\n\n  const handleOnChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSave = (e) => {\n    console.log(\"saved\");\n  };\n  return (\n    <div>\n      <header>\n        {complete ? (\n          <div style={{ color: \"lightgreen\", filter: \"saturate(4)\" }}>\n            Complete\n          </div>\n        ) : (\n          <div style={{ color: \"darkred\", filter: \"saturate(10)\" }}>\n            Incomplete\n          </div>\n        )}\n        <Typography gutterBottom variant=\"h6\">\n          {/* <input placeholder={activeTodo.title}></input> */}\n          <InputBase\n            className={classes.inputs}\n            onBlur={handleSave()}\n            onChange={(e) => handleOnChange(e)}\n            value={title}\n            inputProps={{ \"aria-label\": \"naked\" }}\n          />\n        </Typography>\n      </header>\n      <Divider style={{ backgroundColor: \"grey\", marginBottom: \"20px\" }} />\n      <Typography paragraph>{activeTodo.content}</Typography>\n    </div>\n  );\n};\n\nexport default TodoDetails;\n","/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/queries/GetUser.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Login.js",["93"],"import React, { useState, useEffect } from \"react\";\n//redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginHandler } from \"../../redux/actions/authActions\";\n// apollo\nimport { useLazyQuery, useMutation } from \"@apollo/react-hooks\";\n// import { GET_USER } from \"../../graphql/queries/GetUser\";\nimport { GET_USER_BY_LOGIN } from \"../../graphql/mutations/login\";\n\n// mui components\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n// custom input theme trial\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#E25822 !important\",\n    },\n  },\n});\n\nconst Login = ({ classes, setDataLoading }) => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  const [email, setEmail] = useState(\"demo@bcf.com\");\n  const [password, setPassword] = useState(\"password\");\n  const [emailError, setEmailError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [noUserFound, setNoUserFound] = useState(false);\n\n  let [getUserByLogin, { data, loading, error    }] = useMutation(\n    GET_USER_BY_LOGIN\n  );\n  useEffect(() => {\n    if (!error && data && !loading) {\n      if (!data.Login) {\n        setNoUserFound(true);\n        return;\n      }\n      dispatch(loginHandler(data));\n    }\n  }, [dispatch, error, data, loading]);\n\n  useEffect(() => {\n    if(loading) {\n      setDataLoading(true)\n      //! setting timeout to make loader visible\n      // directly based off query for user info loading param\n        setTimeout(()=> setDataLoading(false), 2800)\n    }\n\n  }, [loading, setDataLoading]);\n  \n  // error handling for login and perform DB Query which should be done in redux thunk\n  const handleLogin = async () => {\n    setNoUserFound(false);\n    setEmailError(false);\n    setPasswordError(false);\n    let emailCurrentError = false;\n    let passwordCurrentError = false;\n\n    if (!email) {\n      emailCurrentError = true;\n      setEmailError(true);\n    }\n\n    if (!password) {\n      passwordCurrentError = true;\n      setPasswordError(true);\n    }\n\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!regex.test(email)) {\n      emailCurrentError = true;\n      setEmailError(true);\n    }\n\n    if (!emailCurrentError && !passwordCurrentError) {\n      setDataLoading(true)\n      getUserByLogin({\n        // fetchPolicy: \"network-only\",\n        variables: {\n          email: email,\n          password: password,\n        },\n      });\n    }\n      setDataLoading(false)\n  };\n\n  return (\n    <div className={classes.signinForm}>\n      {auth.error && (\n        <FormHelperText className={classes.serverError}>\n          {`${auth.error}`}\n        </FormHelperText>\n      )}\n      <form>\n        <FormControl>\n          <MuiThemeProvider theme={theme}>\n            <Input\n              value={email}\n              className={classes.authInputs}\n              placeholder=\"email\"\n              autoComplete=\"email\"\n              autoFocus={true}\n              error={emailError}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {emailError && (\n              <FormHelperText style={{ color: \"red\" }}>\n                must be a valid email\n              </FormHelperText>\n            )}\n            {noUserFound && (\n              <FormHelperText style={{ color: \"red\" }}>\n                500: Seems to be an issue with the server\n              </FormHelperText>\n            )}\n          </MuiThemeProvider>\n        </FormControl>\n        <FormControl>\n          <Input\n            value={password}\n            className={classes.authInputs}\n            placeholder=\"password\"\n            autoComplete=\"current-password\"\n            error={passwordError}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {passwordError && (\n            <FormHelperText style={{ color: \"red\" }}>\n              invalid password\n            </FormHelperText>\n          )}\n        </FormControl>\n        <Button onClick={handleLogin} className={classes.icon}>\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;","/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Logout.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/graphql/mutations/login.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/TodoInterface/LoadingSpinner/LoadingSpinner.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/Components/Auth/Signup.js",[],{"ruleId":"94","severity":1,"message":"95","line":9,"column":3,"nodeType":"96","messageId":"97","endLine":9,"endColumn":11},{"ruleId":"94","severity":1,"message":"98","line":10,"column":3,"nodeType":"96","messageId":"97","endLine":10,"endColumn":7},{"ruleId":"94","severity":1,"message":"99","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":17},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"94","severity":1,"message":"104","line":2,"column":16,"nodeType":"96","messageId":"97","endLine":2,"endColumn":24},{"ruleId":"94","severity":1,"message":"105","line":6,"column":10,"nodeType":"96","messageId":"97","endLine":6,"endColumn":18},{"ruleId":"94","severity":1,"message":"106","line":7,"column":9,"nodeType":"96","messageId":"97","endLine":7,"endColumn":23},{"ruleId":"94","severity":1,"message":"107","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":9,"column":5,"nodeType":"110","messageId":"111","endLine":9,"endColumn":11},{"ruleId":"108","severity":1,"message":"112","line":10,"column":5,"nodeType":"110","messageId":"111","endLine":10,"endColumn":10},{"ruleId":"94","severity":1,"message":"104","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"107","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"113","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":21},{"ruleId":"94","severity":1,"message":"114","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":17},{"ruleId":"94","severity":1,"message":"115","line":12,"column":19,"nodeType":"96","messageId":"97","endLine":12,"endColumn":29},{"ruleId":"94","severity":1,"message":"116","line":6,"column":10,"nodeType":"96","messageId":"97","endLine":6,"endColumn":22},"no-unused-vars","'HttpLink' is defined but never used.","Identifier","unusedVar","'from' is defined but never used.","'onError' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'useState' is defined but never used.","'useQuery' is defined but never used.","'GET_USER_ITEMS' is defined but never used.","'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","Duplicate key 'width'.","'useSelector' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'useLazyQuery' is defined but never used.","no-global-assign","no-unsafe-negation"]