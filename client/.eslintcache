[{"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js":"1","/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js":"2"},{"size":690,"mtime":1611946696028,"results":"3","hashOfConfig":"4"},{"size":659,"mtime":1611946696028,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"axbrrb",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"/Users/kaseymcgee/Desktop/TodoApp/client/src/index.js",[],"/Users/kaseymcgee/Desktop/TodoApp/client/src/App.js",["12","13","14","15"],"\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// Apollo GQL\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {GET_USER_ITEMS} from \"./graphql/queries/GetUserItems\"\n\n// redux\nimport { useSelector, useDispatch } from \"react-redux\";\n// core \nimport LandingPage from './Components/LandingPage/LandingPage'\n\n\n\n\nconst App = () => {\n  const { loading, error, data } = useQuery(GET_USER_ITEMS);\n\n  if (error) return <h1>Database isn't connected properly</h1>;\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <div>\n      <div>\n        Header Component: links will alter based off what route you are on\n      </div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <LandingPage />\n          </Route>\n\n          {/* <Route exact path=\"/manageProfiles\">\n            <ProfileManager />\n          </Route>\n\n          <Route exact path=\"/browse\">\n            <Browse />\n          </Route>\n\n          <Route exact path=\"/history\">\n            <History />\n          </Route>\n\n          <Route exact path=\"/watchlist\">\n            <Watchlist />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <Signin />\n          </Route>\n\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n\n          <Route component={NotFound}>\n            <NotFound />\n          </Route> */}\n        </Switch>\n        {/* temp */}\n      </BrowserRouter>\n      <h1>React is being served</h1>\n      <div></div>\n      <div>\n        !!!---(\n        \n        \n        {data.UserItems ? data.UserItems[0].title : \"Database did not connect\"}\n        )---!!!\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n",["16","17"],{"ruleId":"18","severity":1,"message":"19","line":2,"column":17,"nodeType":"20","messageId":"21","endLine":2,"endColumn":25},{"ruleId":"18","severity":1,"message":"22","line":2,"column":27,"nodeType":"20","messageId":"21","endLine":2,"endColumn":36},{"ruleId":"18","severity":1,"message":"23","line":10,"column":10,"nodeType":"20","messageId":"21","endLine":10,"endColumn":21},{"ruleId":"18","severity":1,"message":"24","line":10,"column":23,"nodeType":"20","messageId":"21","endLine":10,"endColumn":34},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-global-assign","no-unsafe-negation"]