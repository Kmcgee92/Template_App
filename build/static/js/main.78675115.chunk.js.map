{"version":3,"sources":["App.js","index.js"],"names":["GET_USERS","gql","App","useQuery","loading","error","data","UserItems","title","client","ApolloClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gYAMA,IAAMA,E,MAAYC,GAAH,KA8BAC,EAnBH,WAAO,IAAD,EACiBC,mBAASH,GAAlCI,EADQ,EACRA,QAASC,EADD,EACCA,MAAOC,EADR,EACQA,KAExB,OAAID,EAAc,uDACdD,EAAgB,4CAGlB,gCACE,uDACA,yDACA,0CACUE,EAAKC,UAAYD,EAAKC,UAAU,GAAGC,MAAQ,eADrD,iBCfAC,EAAS,IAAIC,IAAa,IAEhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,iBAAD,CAAgBJ,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.78675115.chunk.js","sourcesContent":["\nimport React from \"react\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst GET_USERS = gql`\n  query {\n    UserItems(userId: 4) {\n      id\n      title\n      content\n      userId\n    }\n  }\n`;\n\nconst App = () => {\n  const { loading, error, data } = useQuery(GET_USERS);\n\n  if (error) return <h1>Something went wrong!</h1>;\n  if (loading) return <h1>Loading...</h1>;\n\n  return (\n    <div>\n      <h1>React is being served</h1>\n      <div>Data below was fetched</div>\n      <div>\n        !!!---({data.UserItems ? data.UserItems[0].title : \"fetch failed\"}\n        )---!!!\n      </div>\n    </div>\n  );\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport './index.css';\n\n// main Component\nimport App from \"./App\";\n\n\nconst client = new ApolloClient({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}